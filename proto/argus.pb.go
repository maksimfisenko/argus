// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: proto/argus.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Snapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Cpu           float64                `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        float64                `protobuf:"fixed64,3,opt,name=memory,proto3" json:"memory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	mi := &file_proto_argus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_argus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_proto_argus_proto_rawDescGZIP(), []int{0}
}

func (x *Snapshot) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Snapshot) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Snapshot) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_proto_argus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_argus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_argus_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_argus_proto protoreflect.FileDescriptor

const file_proto_argus_proto_rawDesc = "" +
	"\n" +
	"\x11proto/argus.proto\x12\x05argus\"O\n" +
	"\bSnapshot\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x10\n" +
	"\x03cpu\x18\x02 \x01(\x01R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x03 \x01(\x01R\x06memory\"\x1f\n" +
	"\x03Ack\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2;\n" +
	"\fArgusService\x12+\n" +
	"\fSendSnapshot\x12\x0f.argus.Snapshot\x1a\n" +
	".argus.AckB&Z$github.com/maksimfisenko/argus/protob\x06proto3"

var (
	file_proto_argus_proto_rawDescOnce sync.Once
	file_proto_argus_proto_rawDescData []byte
)

func file_proto_argus_proto_rawDescGZIP() []byte {
	file_proto_argus_proto_rawDescOnce.Do(func() {
		file_proto_argus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_argus_proto_rawDesc), len(file_proto_argus_proto_rawDesc)))
	})
	return file_proto_argus_proto_rawDescData
}

var file_proto_argus_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_argus_proto_goTypes = []any{
	(*Snapshot)(nil), // 0: argus.Snapshot
	(*Ack)(nil),      // 1: argus.Ack
}
var file_proto_argus_proto_depIdxs = []int32{
	0, // 0: argus.ArgusService.SendSnapshot:input_type -> argus.Snapshot
	1, // 1: argus.ArgusService.SendSnapshot:output_type -> argus.Ack
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_argus_proto_init() }
func file_proto_argus_proto_init() {
	if File_proto_argus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_argus_proto_rawDesc), len(file_proto_argus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_argus_proto_goTypes,
		DependencyIndexes: file_proto_argus_proto_depIdxs,
		MessageInfos:      file_proto_argus_proto_msgTypes,
	}.Build()
	File_proto_argus_proto = out.File
	file_proto_argus_proto_goTypes = nil
	file_proto_argus_proto_depIdxs = nil
}
